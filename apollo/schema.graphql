### This file was generated by Nexus Schema
### Do not make changes to this file directly


input CompletedPartUploadInput {
  ETag: String!
  PartNumber: Int!
}

type MLModelVersion {
  createdBy: String
  dateCreated: String
  description: String
  isArchived: Boolean
  isFinalized: Boolean
  modelId: Model
  modelVersionId: ID
  numericVersion: Int
  s3Prefix: String
}

type Model {
  createdBy: String
  dateCreated: String
  dateModified: String
  description: String
  isArchived: Boolean
  modelId: ID
  modelName: String
  modifiedBy: String
  storageProvider: StorageProvider
}

input ModelInput {
  description: String!
  modelName: String!
  storageProviderId: String!
}

input ModelVersionInput {
  description: String
  modelId: String!
}

type Mutation {
  archiveModel(modelId: String!): Model
  archiveModelVersion(modelVersionId: String!): MLModelVersion
  archiveStorageProvider(providerId: String!): StorageProvider
  createModel(data: ModelInput): Model
  createModelVersion(data: ModelVersionInput): MLModelVersion
  createStorageProvider(data: StorageProviderInput): StorageProvider
  editModel(data: ModelInput, modelId: String!): Model
  editStorageProvider(data: StorageProviderInput, providerId: String!): StorageProvider
  presignURL(data: PresignedURLInput): PresignedURL
  publishModelVersion(modelVersionId: String!): MLModelVersion
}

input PartsInputType {
  Parts: [CompletedPartUploadInput]
}

type PresignedURL {
  ETag: String
  key: String
  partNumber: String
  uploadId: String
  url: String
}

input PresignedURLInput {
  filename: String!
  method: method!
  modelVersionId: String!
  multipartUpload: PartsInputType
  partNumber: Int
  uploadId: String
}

type Query {
  getModel(modelId: String!): [Model]!
  getStorageProvider(id: String!): [StorageProvider]!
  listModelVersions(modelId: String!): [MLModelVersion]!
  listModels: [Model]!
  listStorageProviders: [StorageProvider]!
}

type StorageProvider {
  accessKeyId: String
  bucket: String
  createdBy: String
  dateCreated: String
  dateModified: String
  endpointUrl: String
  isArchived: Boolean
  modifiedBy: String
  owner: String
  providerId: ID
  region: String
  secretAccessKey: String
}

input StorageProviderInput {
  accessKeyId: String!
  bucket: String!
  endpointUrl: String!
  region: String!
  secretAccessKey: String!
}

enum method {
  abortMultipartUpload
  createMultipartUpload
  finalizeMultipartUpload
  uploadPart
}